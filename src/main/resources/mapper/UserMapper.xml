<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.alibaba.xinan.mapper.UserMapper">
    <select id="findById" parameterType="int" resultType="User">
        SELECT *
        FROM `user`
        WHERE id = #{userId};
    </select>

    <select id="findByUsername" parameterType="java.lang.String" resultType="User">
        SELECT *
        FROM `user`
        WHERE username = #{username};
    </select>

    <select id="findByEntity" parameterType="User" resultType="User">
        SELECT *
        FROM user
        <where>
            <include refid="user_select"/>
        </where>
    </select>

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                `username`,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="description != null">
                `description`,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="description != null">
                #{description},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="User">
        UPDATE `user`
        <set>
            <if test="username != null">
                `username` = #{username},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="description != null">
                `password` = #{description},
            </if>
        </set>
        WHERE `id` = #{id}
    </update>

    <delete id="deleteById" parameterType="int">
        DELETE
        FROM user
        WHERE `id` = #{id};
    </delete>

    <delete id="deleteAllByIdList">
        DELETE
        FROM user
        WHERE id IN
        <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
            #{userId}
        </foreach>
        <!--
			collection：指定要遍历的集合
				List类型的参数会特殊处理在map中，map的key就叫list
				Array数组类型的参数会特殊处理在map中，map的key就叫array
			item：将当前遍历的元素赋值给指定的变量
			separator：每个元素之间的分隔符
			open：遍历出所有结果拼接一个开始的字符
			close：遍历出所有结果拼接一个结束的字符
			index：索引。遍历list的时候是索引，item就是当前值
				    遍历map的时候，index是key，item就是map的值
			#{变量名}就能取出变量的值，也就是当前遍历出的元素
		 -->
    </delete>

    <sql id="user_select">
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="username != null">
            AND username = #{username}
        </if>
        <if test="description != null">
            AND description = #{description}
        </if>
    </sql>
</mapper>